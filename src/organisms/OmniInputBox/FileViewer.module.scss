@use "styles/colors";
@use "styles/sizes";

.wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-grow: 1;
  position: relative;
}

.preview {
  position: relative;
  overflow: hidden;
  width: 100%;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  border-radius: 8px;
}

.textarea {
  width: 100%;
  font-size: 14px;
  box-sizing: border-box;
  display: flex;
  padding-top: 12px;
  padding-bottom: 12px;
  padding-left: 16px;
  padding-right: 16px;
  border: 0;
  outline: 0;
  line-height: 1.4;
  flex-grow: 1;
  border-radius: 8px;
  color: #414141;

  &.sliced {
    opacity: 0.3;
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 72px;
  padding-left: 24px;
  padding-right: 16px;
  border-bottom: 2px solid #4ca09b;
}

.iconTitle {
  color: colors.$helper;
  display: flex;
  align-items: center;
  font-weight: 700;

  > *:first-child {
    margin-right: 16px;
  }

  &.analyzing {
    color: colors.$helper;
  }

  &.success {
    color: colors.$green;
  }

  &.error {
    color: colors.$error;
  }
}

.loading {
  svg {
    fill: colors.$helper;
  }
}

.actions {
  flex-grow: 0;
  flex-shrink: 0;
  display: flex;
  align-items: center;

  > * {
    margin-right: 8px;
  }
  > *:last-child {
    margin-right: 0;
  }
}

.spinner {
  svg {
    fill: colors.$helper;
  }
}

.check {
  fill: colors.$green;
}

@keyframes slideFromBottom {
  from {
    opacity: 0;
    transform: translate(-1 * sizes.$input-height * 0.5, 10px);
  }
  to {
    opacity: 1;
    transform: translate(-1 * sizes.$input-height * 0.5, 0);
  }
}

.clearButton {
  position: absolute;
  top: -52px;
  left: 50%;
  transform: translateX(-1 * sizes.$input-height * 0.5);
  animation: slideFromBottom 0.3s ease-in-out;
}

.errorIcon {
  fill: colors.$error;
}

.errorMessage {
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 12px;
  color: colors.$error;
}

.sliceNotice {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, 50%);
}
